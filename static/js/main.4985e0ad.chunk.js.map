{"version":3,"sources":["SingleState.js","App.js","serviceWorker.js","index.js"],"names":["CDCdata","state","cases","latitude","longitude","App","props","data","newYork","viewport","width","height","zoom","selectedState","this","console","log","date","Date","className","src","alt","toDateString","id","mapboxApiAccessToken","mapStyle","onViewportChange","setState","map","ind","key","onClick","e","preventDefault","onClose","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4985e0ad.chunk.js","sourcesContent":["const CDCdata = [\n  {\n    state: \"Wyoming\",\n    cases: \"None\",\n    latitude: 43.07597,\n    longitude: -107.290283\n  },\n  {\n    state: \"West Virginia\",\n    cases: \"None\",\n    latitude: 39.0,\n    longitude: -80.5\n  },\n\n  {\n    state: \"Washington\",\n    cases: 267,\n    latitude: 47.751076,\n    longitude: -120.740135\n  },\n\n  {\n    state: \"Texas\",\n    cases: 15,\n    latitude: 31.0,\n    longitude: -100.0\n  },\n\n  {\n    state: \"Pennsylvania\",\n    cases: 12,\n    latitude: 41.203323,\n    longitude: -77.194527\n  },\n\n  {\n    state: \"Virginia\",\n    cases: 8,\n    latitude: 37.926868,\n    longitude: -78.024902\n  },\n\n  {\n    state: \"North Dakota\",\n    cases: \"None\",\n    latitude: 47.650589,\n    longitude: -100.437012\n  },\n\n  {\n    state: \"Wisconsin\",\n    cases: \"1 to 5\",\n    latitude: 44.5,\n    longitude: -89.5\n  },\n\n  {\n    state: \"New York\",\n    cases: 173,\n    latitude: 43.0,\n    longitude: -75.0\n  },\n  {\n    state: \"Oregon\",\n    cases: 15,\n    latitude: 44.0,\n    longitude: -120.5\n  },\n\n  {\n    state: \"New Mexico\",\n    cases: \"None\",\n    latitude: 34.307144,\n    longitude: -106.018066\n  },\n  {\n    state: \"New Jersey\",\n    cases: 15,\n    latitude: 39.833851,\n    longitude: -74.871826\n  },\n  {\n    state: \"South Carolina\",\n    cases: 9,\n    latitude: 33.836082,\n    longitude: -81.163727\n  },\n\n  {\n    state: \"Tennessee\",\n    cases: 7,\n    latitude: 35.860119,\n    longitude: -86.660156\n  },\n\n  {\n    state: \"Montana\",\n    cases: \"None\",\n    latitude: 46.96526,\n    longitude: -109.533691\n  },\n  {\n    state: \"Mississippi\",\n    cases: \"None\",\n    latitude: 33.0,\n    longitude: -90.0\n  },\n\n  {\n    state: \"Ohio\",\n    cases: \"1 to 5\",\n    latitude: 40.367474,\n    longitude: -82.996216\n  },\n\n  {\n    state: \"New Hampshire\",\n    cases: \"1 to 5\",\n    latitude: 44.0,\n    longitude: -71.5\n  },\n\n  {\n    state: \"Nevada\",\n    cases: \"1 to 5\",\n    latitude: 39.876019,\n    longitude: -117.224121\n  },\n\n  {\n    state: \"Nebraska\",\n    cases: \"1 to 5\",\n    latitude: 41.5,\n    longitude: -100.0\n  },\n\n  {\n    state: \"Massachusetts\",\n    cases: 91,\n    latitude: 42.407211,\n    longitude: -71.382439\n  },\n\n  {\n    state: \"Maine\",\n    cases: \"None\",\n    latitude: 45.367584,\n    longitude: -68.972168\n  },\n\n  {\n    state: \"Illinois\",\n    cases: 19,\n    latitude: 40.0,\n    longitude: -89.0\n  },\n\n  {\n    state: \"Maryland\",\n    cases: 9,\n    latitude: 39.045753,\n    longitude: -76.641273\n  },\n\n  {\n    state: \"North Carolina\",\n    cases: 7,\n    latitude: 35.782169,\n    longitude: -80.793457\n  },\n\n  {\n    state: \"Idaho\",\n    cases: \"None\",\n    latitude: 44.068203,\n    longitude: -114.742043\n  },\n\n  {\n    state: \"Delaware\",\n    cases: \"None\",\n    latitude: 39.0,\n    longitude: -75.5\n  },\n  {\n    state: \"Vermont\",\n    cases: \"1 to 5\",\n    latitude: 44.0,\n    longitude: -72.699997\n  },\n  {\n    state: \"Utah\",\n    cases: \"1 to 5\",\n    latitude: 39.41922,\n    longitude: -111.950684\n  },\n\n  {\n    state: \"South Dakota\",\n    cases: \"1 to 5\",\n    latitude: 44.5,\n    longitude: -100.0\n  },\n  {\n    state: \"Rhode Island\",\n    cases: \"1 to 5\",\n    latitude: 41.700001,\n    longitude: -71.5\n  },\n\n  {\n    state: \"Oklahoma\",\n    cases: \"1 to 5\",\n    latitude: 36.084621,\n    longitude: -96.921387\n  },\n\n  {\n    state: \"Missouri\",\n    cases: \"1 to 5\",\n    latitude: 38.573936,\n    longitude: -92.60376\n  },\n  {\n    state: \"Minnesota\",\n    cases: \"1 to 5\",\n    latitude: 46.39241,\n    longitude: -94.63623\n  },\n  {\n    state: \"Michigan\",\n    cases: \"1 to 5\",\n    latitude: 44.182205,\n    longitude: -84.506836\n  },\n  {\n    state: \"Louisiana\",\n    cases: \"1 to 5\",\n    latitude: 30.39183,\n    longitude: -92.329102\n  },\n\n  {\n    state: \"Kentucky\",\n    cases: \"1 to 5\",\n    latitude: 37.839333,\n    longitude: -84.27002\n  },\n\n  {\n    state: \"Kansas\",\n    cases: \"1 to 5\",\n    latitude: 38.5,\n    longitude: -98.0\n  },\n  {\n    state: \"Indiana\",\n    cases: \"1 to 5\",\n    latitude: 40.273502,\n    longitude: -86.126976\n  },\n  {\n    state: \"Hawaii\",\n    cases: \"1 to 5\",\n    latitude: 19.741755,\n    longitude: -155.844437\n  },\n  {\n    state: \"Connecticut\",\n    cases: \"1 to 5\",\n    latitude: 41.599998,\n    longitude: -72.699997\n  },\n  {\n    state: \"California\",\n    cases: 152,\n    latitude: 36.778259,\n    longitude: -119.417931\n  },\n  {\n    state: \"Georgia\",\n    cases: 23,\n    latitude: 33.247875,\n    longitude: -83.441162\n  },\n  {\n    state: \"Florida\",\n    cases: 19,\n    latitude: 27.994402,\n    longitude: -81.760254\n  },\n\n  {\n    state: \"Colorado\",\n    cases: 17,\n    latitude: 39.113014,\n    longitude: -105.358887\n  },\n\n  {\n    state: \"Iowa\",\n    cases: 13,\n    latitude: 42.032974,\n    longitude: -93.581543\n  },\n\n  {\n    state: \"Arkansas\",\n    cases: \"None\",\n    latitude: 34.799999,\n    longitude: -92.199997\n  },\n\n  {\n    state: \"Arizona\",\n    cases: 8,\n    latitude: 34.048927,\n    longitude: -111.093735\n  },\n  {\n    state: \"Alaska\",\n    cases: \"None\",\n    latitude: 66.160507,\n    longitude: -153.369141\n  },\n\n  {\n    state: \"Alabama\",\n    cases: \"None\",\n    latitude: 32.31823,\n    longitude: -86.902298\n  }\n];\n\nexport default CDCdata;\n","import React from \"react\";\nimport \"./App.css\";\nimport ReactMapGl, { Marker, Popup } from \"react-map-gl\";\n\nimport CDCdata from \"./SingleState\";\n\nconst token =\n  \"pk.eyJ1Ijoia2ttYXJ0aW5lejk1IiwiYSI6ImNrN25wOHh5MTAwd3czc25pOXplYnpkazMifQ.8lB9XIkOiTxH3PUadXUVdg\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: CDCdata,\n      // loaded: false,\n      newYork: [\n        \"New York\",\n        \"2020-03-10T17:13:27\",\n        173,\n        0,\n        0,\n        42.1657,\n        -74.9481\n      ],\n      viewport: {\n        latitude: 39.381266,\n        longitude: -97.922211,\n        width: \"80vw\",\n        height: \"80vw\",\n        zoom: 4\n      },\n      selectedState: null\n    };\n  }\n\n  render() {\n    let { data } = this.state;\n\n    // data.splice(52).sort();\n\n    console.log(\"DATA\", data);\n    let date = new Date(this.state.newYork[1]);\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <nav></nav>\n          <h1>Coro...NAH..</h1>\n          <img\n            src=\"https://thumbs.gfycat.com/PinkBraveCobra-size_restricted.gif\"\n            alt=\"\"\n          ></img>\n          <h3>\n            {this.state.newYork[0]} as of {date.toDateString()}\n          </h3>\n          <ul>\n            <li>Confirmed: {this.state.newYork[2]}</li>\n            <li>Deaths: {this.state.newYork[3]}</li>\n            <li>Recovered: {this.state.newYork[4]}</li>\n          </ul>\n\n          <div className=\"App-header\" id=\"map\">\n            <ReactMapGl\n              {...this.state.viewport}\n              mapboxApiAccessToken={token}\n              mapStyle=\"mapbox://styles/kkmartinez95/ck7npqtrh0cef1ir1ir9opgk8\"\n              onViewportChange={viewport => {\n                this.setState({ viewport });\n              }}\n            >\n              {data.map((state, ind) => {\n                return (\n                  <Marker\n                    key={ind}\n                    latitude={state.latitude}\n                    longitude={state.longitude}\n                  >\n                    <button\n                      className=\"sick\"\n                      onClick={e => {\n                        e.preventDefault();\n                        this.setState({ selectedState: state });\n                      }}\n                    >\n                      <img src=\"./sick.png\"></img>\n                    </button>\n                  </Marker>\n                );\n              })}\n              {this.state.selectedState ? (\n                <Popup\n                  latitude={this.state.selectedState.latitude}\n                  longitude={this.state.selectedState.longitude}\n                  onClose={() => {\n                    this.setState({ selectedState: null });\n                  }}\n                >\n                  <div id=\"info\">\n                    <h2>{this.state.selectedState.state}</h2>\n                    <p>Cases: {this.state.selectedState.cases} </p>\n                  </div>\n                </Popup>\n              ) : null}\n            </ReactMapGl>\n          </div>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}